<snippet>
    <content><![CDATA[
#include <bits/stdc++.h>
using namespace std;

typedef long long unsigned int bigInt;
#define mod 1000000007;
#define deb(x) cout << # x << " = " << x << endl;
#define deb2(x, y) cout << # x << " = " << x << ", " << # y << " = " << y << endl;
#define printArr(arr, size) cout << # arr << " : "; for (int i = 0; i < size; i++) cout << arr[i] << " "; cout << endl;


struct Node {
   int   data;
   Node *left;
   Node *right;

   Node(int val) {
      data  = val;
      left  = NULL;
      right = NULL;
   }
};

class Tree {
private:
   Node *root;

   Node* push(Node *root, int data) {
      if (root == NULL) {
         Node *newNode = new Node(data);
         return (newNode);
      }

      if (data < root->data) {
         root->left = push(root->left, data);
      } else {
         root->right = push(root->right, data);
      }

      return (root);
   }

   ${5}

public:
   Tree() {
      root = NULL;
   }

   Tree(int data) {
      root = new Node(data);
   }

   void initialize() {
      int val;

      cin >> val;

      while (val != -1) {
         insert(val);
         cin >> val;
      }
   }

   ${2:void} solve(${3}) {
      ${4}
   }

   void insert(int data) {
      root = push(root, data);
   }
};

int main() {
   srand(time(0));
   Tree *t = new Tree();
   t->initialize();
   ${1}t->solve();
   cout << endl;
   return (0);
}
]]></content>
    <tabTrigger>tree!</tabTrigger>
    <scope>source.c++</scope>
</snippet>
